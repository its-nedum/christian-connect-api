{
  "swagger": "2.0",
  "info": {
    "description": "This is a the API documentation for Christian Connect a social network site where people can meet and connect.",
    "version": "1.0.0",
    "title": "Christian Connect API",
    "contact": {
      "email": "emesuechinedu@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "christian-connect-api.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Music",
      "description": "Everything about music"
    },
    {
      "name": "Video",
      "description": "Everything about videos"
    },
    {
      "name": "Lyric",
      "description": "Everything about lyrics"
    },
    {
      "name": "Event",
      "description": "Everything about events"
    },
    {
      "name": "User",
      "description": "Everything about users"
    },
    {
      "name": "Admin",
      "description": "Everything about admins"
    },
    {
      "name": "Job",
      "description": "Everything about jobs"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/category/music": {
      "get": {
        "tags": [
          "Music"
        ],
        "summary": "Get a list of all songs",
        "description": "This endpoint uses a get request to retrieve all songs",
        "operationId": "getMusic",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Music"
              }
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/music/{id}": {
      "get": {
        "tags": [
          "Music"
        ],
        "summary": "Get a song with its comment",
        "description": "This endpoint uses GET request",
        "operationId": "getMusicById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id values that need to be considered for filter",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Music"
              }
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/music/:id/comment": {
      "post": {
        "tags": [
          "Music"
        ],
        "summary": "Add a comment to a song",
        "description": "Adds a comment to a song",
        "operationId": "addCommentToSong",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Music_Comment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Music_Comment"
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/category/video": {
      "get": {
        "tags": [
          "Video"
        ],
        "summary": "Get a list of all video",
        "description": "This endpoint uses a get request to retrieve all video",
        "operationId": "getVideo",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Video"
              }
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/video/{id}": {
      "get": {
        "tags": [
          "Video"
        ],
        "summary": "Get a video with its comment",
        "description": "This endpoint uses GET request",
        "operationId": "getVideoById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id values that need to be considered for filter",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Video"
              }
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/video/:id/comment": {
      "post": {
        "tags": [
          "Video"
        ],
        "summary": "Add a comment to a video",
        "description": "Adds a comment to a video",
        "operationId": "addCommentToVideo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Video_Comment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Video_Comment"
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/category/lyric": {
      "get": {
        "tags": [
          "Lyric"
        ],
        "summary": "Get a list of all lyrics",
        "description": "This endpoint uses a get request to retrieve all lyrics",
        "operationId": "getLyric",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Lyric"
              }
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/lyric/{id}": {
      "get": {
        "tags": [
          "Lyric"
        ],
        "summary": "Get a lyric with its comment",
        "description": "This endpoint uses GET request",
        "operationId": "getLyricById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id values that need to be considered for filter",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Lyric"
              }
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/lyric/:id/comment": {
      "post": {
        "tags": [
          "Lyric"
        ],
        "summary": "Add a comment to a lyric",
        "description": "Adds a comment to a lyric",
        "operationId": "addCommentToLyric",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Lyric_Comment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Lyric_Comment"
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/category/event": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Get a list of all events",
        "description": "This endpoint uses a get request to retrieve all events",
        "operationId": "getAllEvents",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Event"
              }
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/category/job": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Get a list of all job",
        "description": "This endpoint uses a get request to retrieve all jobs",
        "operationId": "getJob",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/job/{id}": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Get a single",
        "description": "This endpoint uses GET request",
        "operationId": "getAJob",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id values that need to be considered for filter",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/signup": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add a user to the system",
        "description": "Register a user",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/signin": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Login a user into the system",
        "description": "Register a user",
        "operationId": "signinUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignIn"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SignIn"
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/update-profile": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Update a user profile in the system",
        "description": "NOTE: Authenticated user only",
        "operationId": "updateUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/avatar": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Upload user profile picture",
        "description": "NOTE: Authenticated user only",
        "operationId": "addAvatar",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddImage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/change-password": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Change user password",
        "description": "NOTE: Authenticated user only",
        "operationId": "changePassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/user-details": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a user profile details ",
        "description": "NOTE: Authenticated user only",
        "operationId": "getUserProfile",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Users"
              }
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/create-admin": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Add an admin to the system",
        "description": "NOTE: Authenticated super admin only",
        "operationId": "addAdmin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Admin"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Admin"
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/signin-admin": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Login an admin into the system",
        "description": "NOTE: Authenticated super admin only",
        "operationId": "signinAdmin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignIn"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SignIn"
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/admin-extra": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get uploaded report ",
        "description": "NOTE: Authenticated user only",
        "operationId": "adminExtra",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/music": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Add a song to the system",
        "description": "Add a song",
        "operationId": "addSong",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Music"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Music"
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/video": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Add a video to the system",
        "description": "Add a video",
        "operationId": "addVideo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Video"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Video"
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/lyric": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Add a lyric to the system",
        "description": "Add a lyric",
        "operationId": "addLyric",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Lyric"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Lyric"
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/event": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Add a event to the system",
        "description": "Add a event",
        "operationId": "addEvent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    },
    "/job": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Add a job to the system",
        "description": "Add a job",
        "operationId": "addJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "500": {
            "description": "Something went wrong, please try again later"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Music": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "music_title": {
          "type": "string"
        },
        "music_about": {
          "type": "string"
        },
        "image_url": {
          "type": "string"
        },
        "music_url": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "uploaded_by": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Music_Comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "comment": {
          "type": "string"
        },
        "comment_by": {
          "type": "string"
        },
        "music_id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Video": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "video_title": {
          "type": "string"
        },
        "video_about": {
          "type": "string"
        },
        "image_url": {
          "type": "string"
        },
        "video_url": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "uploaded_by": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Video_Comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "comment": {
          "type": "string"
        },
        "comment_by": {
          "type": "string"
        },
        "video_id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Lyric": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "lyric": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "uploaded_by": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Lyric_Comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "comment": {
          "type": "string"
        },
        "comment_by": {
          "type": "string"
        },
        "lyric_id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "theme": {
          "type": "string"
        },
        "organizer": {
          "type": "string"
        },
        "ministering": {
          "type": "string"
        },
        "venue": {
          "type": "string"
        },
        "start_date": {
          "type": "string"
        },
        "end_date": {
          "type": "string"
        },
        "time": {
          "type": "string"
        },
        "enquiry": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "image_url": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "uploaded_by": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "telephone": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "birthdate": {
          "type": "string"
        },
        "relationship_status": {
          "type": "string"
        },
        "work": {
          "type": "string"
        },
        "school": {
          "type": "string"
        },
        "about_me": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SignIn": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Job": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "position": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "salary": {
          "type": "string"
        },
        "job_type": {
          "type": "string"
        },
        "deadline": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "requirement": {
          "type": "string"
        },
        "apply": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "uploaded_by": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Admin": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "admin_type": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AddImage": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string"
        }
      }
    },
    "ChangePassword": {
      "type": "object",
      "properties": {
        "current_password": {
          "type": "string"
        },
        "new_password": {
          "type": "string"
        },
        "confirm_password": {
          "type": "string"
        }
      }
    }
  }
}